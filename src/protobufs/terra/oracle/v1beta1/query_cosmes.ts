// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file terra/oracle/v1beta1/query.proto (package terra.oracle.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QueryActivesRequest, QueryActivesResponse, QueryAggregatePrevoteRequest, QueryAggregatePrevoteResponse, QueryAggregatePrevotesRequest, QueryAggregatePrevotesResponse, QueryAggregateVoteRequest, QueryAggregateVoteResponse, QueryAggregateVotesRequest, QueryAggregateVotesResponse, QueryExchangeRateRequest, QueryExchangeRateResponse, QueryExchangeRatesRequest, QueryExchangeRatesResponse, QueryFeederDelegationRequest, QueryFeederDelegationResponse, QueryMissCounterRequest, QueryMissCounterResponse, QueryParamsRequest, QueryParamsResponse, QueryTobinTaxesRequest, QueryTobinTaxesResponse, QueryTobinTaxRequest, QueryTobinTaxResponse, QueryVoteTargetsRequest, QueryVoteTargetsResponse } from "./query_pb.js";

const TYPE_NAME = "terra.oracle.v1beta1.Query";

/**
 * ExchangeRate returns exchange rate of a denom
 *
 * @generated from rpc terra.oracle.v1beta1.Query.ExchangeRate
 */
export const QueryExchangeRateService = {
  typeName: TYPE_NAME,
  method: "ExchangeRate",
  Request: QueryExchangeRateRequest,
  Response: QueryExchangeRateResponse,
} as const;

/**
 * ExchangeRates returns exchange rates of all denoms
 *
 * @generated from rpc terra.oracle.v1beta1.Query.ExchangeRates
 */
export const QueryExchangeRatesService = {
  typeName: TYPE_NAME,
  method: "ExchangeRates",
  Request: QueryExchangeRatesRequest,
  Response: QueryExchangeRatesResponse,
} as const;

/**
 * TobinTax returns tobin tax of a denom
 *
 * @generated from rpc terra.oracle.v1beta1.Query.TobinTax
 */
export const QueryTobinTaxService = {
  typeName: TYPE_NAME,
  method: "TobinTax",
  Request: QueryTobinTaxRequest,
  Response: QueryTobinTaxResponse,
} as const;

/**
 * TobinTaxes returns tobin taxes of all denoms
 *
 * @generated from rpc terra.oracle.v1beta1.Query.TobinTaxes
 */
export const QueryTobinTaxesService = {
  typeName: TYPE_NAME,
  method: "TobinTaxes",
  Request: QueryTobinTaxesRequest,
  Response: QueryTobinTaxesResponse,
} as const;

/**
 * Actives returns all active denoms
 *
 * @generated from rpc terra.oracle.v1beta1.Query.Actives
 */
export const QueryActivesService = {
  typeName: TYPE_NAME,
  method: "Actives",
  Request: QueryActivesRequest,
  Response: QueryActivesResponse,
} as const;

/**
 * VoteTargets returns all vote target denoms
 *
 * @generated from rpc terra.oracle.v1beta1.Query.VoteTargets
 */
export const QueryVoteTargetsService = {
  typeName: TYPE_NAME,
  method: "VoteTargets",
  Request: QueryVoteTargetsRequest,
  Response: QueryVoteTargetsResponse,
} as const;

/**
 * FeederDelegation returns feeder delegation of a validator
 *
 * @generated from rpc terra.oracle.v1beta1.Query.FeederDelegation
 */
export const QueryFeederDelegationService = {
  typeName: TYPE_NAME,
  method: "FeederDelegation",
  Request: QueryFeederDelegationRequest,
  Response: QueryFeederDelegationResponse,
} as const;

/**
 * MissCounter returns oracle miss counter of a validator
 *
 * @generated from rpc terra.oracle.v1beta1.Query.MissCounter
 */
export const QueryMissCounterService = {
  typeName: TYPE_NAME,
  method: "MissCounter",
  Request: QueryMissCounterRequest,
  Response: QueryMissCounterResponse,
} as const;

/**
 * AggregatePrevote returns an aggregate prevote of a validator
 *
 * @generated from rpc terra.oracle.v1beta1.Query.AggregatePrevote
 */
export const QueryAggregatePrevoteService = {
  typeName: TYPE_NAME,
  method: "AggregatePrevote",
  Request: QueryAggregatePrevoteRequest,
  Response: QueryAggregatePrevoteResponse,
} as const;

/**
 * AggregatePrevotes returns aggregate prevotes of all validators
 *
 * @generated from rpc terra.oracle.v1beta1.Query.AggregatePrevotes
 */
export const QueryAggregatePrevotesService = {
  typeName: TYPE_NAME,
  method: "AggregatePrevotes",
  Request: QueryAggregatePrevotesRequest,
  Response: QueryAggregatePrevotesResponse,
} as const;

/**
 * AggregateVote returns an aggregate vote of a validator
 *
 * @generated from rpc terra.oracle.v1beta1.Query.AggregateVote
 */
export const QueryAggregateVoteService = {
  typeName: TYPE_NAME,
  method: "AggregateVote",
  Request: QueryAggregateVoteRequest,
  Response: QueryAggregateVoteResponse,
} as const;

/**
 * AggregateVotes returns aggregate votes of all validators
 *
 * @generated from rpc terra.oracle.v1beta1.Query.AggregateVotes
 */
export const QueryAggregateVotesService = {
  typeName: TYPE_NAME,
  method: "AggregateVotes",
  Request: QueryAggregateVotesRequest,
  Response: QueryAggregateVotesResponse,
} as const;

/**
 * Params queries all parameters.
 *
 * @generated from rpc terra.oracle.v1beta1.Query.Params
 */
export const QueryParamsService = {
  typeName: TYPE_NAME,
  method: "Params",
  Request: QueryParamsRequest,
  Response: QueryParamsResponse,
} as const;

