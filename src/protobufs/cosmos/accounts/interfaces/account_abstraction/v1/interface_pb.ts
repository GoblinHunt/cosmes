// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file cosmos/accounts/interfaces/account_abstraction/v1/interface.proto (package cosmos.accounts.interfaces.account_abstraction.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { UserOperation } from "../../../v1/account_abstraction_pb.js";

/**
 * MsgAuthenticate is a message that an x/account account abstraction implementer
 * must handle to authenticate a state transition.
 *
 * @generated from message cosmos.accounts.interfaces.account_abstraction.v1.MsgAuthenticate
 */
export class MsgAuthenticate extends Message<MsgAuthenticate> {
  /**
   * bundler defines the address of the bundler that sent the operation.
   * NOTE: in case the operation was sent directly by the user, this field will reflect
   * the user address.
   *
   * @generated from field: string bundler = 1;
   */
  bundler = "";

  /**
   * user_operation is the operation that the user is trying to perform.
   * it also contains authentication information.
   *
   * @generated from field: cosmos.accounts.v1.UserOperation user_operation = 2;
   */
  userOperation?: UserOperation;

  constructor(data?: PartialMessage<MsgAuthenticate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cosmos.accounts.interfaces.account_abstraction.v1.MsgAuthenticate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "bundler", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_operation", kind: "message", T: UserOperation },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAuthenticate {
    return new MsgAuthenticate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAuthenticate {
    return new MsgAuthenticate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAuthenticate {
    return new MsgAuthenticate().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAuthenticate | PlainMessage<MsgAuthenticate> | undefined, b: MsgAuthenticate | PlainMessage<MsgAuthenticate> | undefined): boolean {
    return proto3.util.equals(MsgAuthenticate, a, b);
  }
}

/**
 * MsgAuthenticateResponse is the response to MsgAuthenticate.
 * The authentication either fails or succeeds, this is why
 * there are no auxiliary fields to the response.
 *
 * @generated from message cosmos.accounts.interfaces.account_abstraction.v1.MsgAuthenticateResponse
 */
export class MsgAuthenticateResponse extends Message<MsgAuthenticateResponse> {
  constructor(data?: PartialMessage<MsgAuthenticateResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cosmos.accounts.interfaces.account_abstraction.v1.MsgAuthenticateResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAuthenticateResponse {
    return new MsgAuthenticateResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAuthenticateResponse {
    return new MsgAuthenticateResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAuthenticateResponse {
    return new MsgAuthenticateResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAuthenticateResponse | PlainMessage<MsgAuthenticateResponse> | undefined, b: MsgAuthenticateResponse | PlainMessage<MsgAuthenticateResponse> | undefined): boolean {
    return proto3.util.equals(MsgAuthenticateResponse, a, b);
  }
}

/**
 * MsgPayBundler is a message that an x/account account abstraction implementer
 * can optionally implement in case it wants to further refine control over
 * the bundler payment messages.
 * The account must ensure the caller of this message is the x/accounts module itself.
 *
 * @generated from message cosmos.accounts.interfaces.account_abstraction.v1.MsgPayBundler
 */
export class MsgPayBundler extends Message<MsgPayBundler> {
  /**
   * bundler is the address of the bundler.
   * NOTE: in case the operation was sent directly by the user, this field will
   * reflect the user address.
   *
   * @generated from field: string bundler = 1;
   */
  bundler = "";

  /**
   * bundler_payment_messages are the messages that the operation sender will execute.
   * The account can modify the messages as it sees fit.
   *
   * @generated from field: repeated google.protobuf.Any bundler_payment_messages = 2;
   */
  bundlerPaymentMessages: Any[] = [];

  constructor(data?: PartialMessage<MsgPayBundler>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cosmos.accounts.interfaces.account_abstraction.v1.MsgPayBundler";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "bundler", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "bundler_payment_messages", kind: "message", T: Any, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgPayBundler {
    return new MsgPayBundler().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgPayBundler {
    return new MsgPayBundler().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgPayBundler {
    return new MsgPayBundler().fromJsonString(jsonString, options);
  }

  static equals(a: MsgPayBundler | PlainMessage<MsgPayBundler> | undefined, b: MsgPayBundler | PlainMessage<MsgPayBundler> | undefined): boolean {
    return proto3.util.equals(MsgPayBundler, a, b);
  }
}

/**
 * MsgPayBundlerResponse is the response to MsgPayBundler.
 *
 * @generated from message cosmos.accounts.interfaces.account_abstraction.v1.MsgPayBundlerResponse
 */
export class MsgPayBundlerResponse extends Message<MsgPayBundlerResponse> {
  /**
   * bundler_payment_messages_response are the messages that the bundler will pay for.
   *
   * @generated from field: repeated google.protobuf.Any bundler_payment_messages_response = 1;
   */
  bundlerPaymentMessagesResponse: Any[] = [];

  constructor(data?: PartialMessage<MsgPayBundlerResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cosmos.accounts.interfaces.account_abstraction.v1.MsgPayBundlerResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "bundler_payment_messages_response", kind: "message", T: Any, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgPayBundlerResponse {
    return new MsgPayBundlerResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgPayBundlerResponse {
    return new MsgPayBundlerResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgPayBundlerResponse {
    return new MsgPayBundlerResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgPayBundlerResponse | PlainMessage<MsgPayBundlerResponse> | undefined, b: MsgPayBundlerResponse | PlainMessage<MsgPayBundlerResponse> | undefined): boolean {
    return proto3.util.equals(MsgPayBundlerResponse, a, b);
  }
}

/**
 * MsgExecute is a message that an x/account account abstraction implementer
 * can optionally implement in case it wants to further refine control over
 * the execution messages. It can be used to extend the execution flow, possibly
 * block certain messages, or modify them.
 * The account must ensure the caller of this message is the x/accounts module itself.
 *
 * @generated from message cosmos.accounts.interfaces.account_abstraction.v1.MsgExecute
 */
export class MsgExecute extends Message<MsgExecute> {
  /**
   * bundler is the address of the bundler.
   * NOTE: in case the operation was sent directly by the user, this field will
   * reflect the user address.
   *
   * @generated from field: string bundler = 1;
   */
  bundler = "";

  /**
   * execution_messages are the messages that the operation sender will execute.
   * The account can modify the messages as it sees fit.
   *
   * @generated from field: repeated google.protobuf.Any execution_messages = 2;
   */
  executionMessages: Any[] = [];

  constructor(data?: PartialMessage<MsgExecute>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cosmos.accounts.interfaces.account_abstraction.v1.MsgExecute";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "bundler", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "execution_messages", kind: "message", T: Any, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgExecute {
    return new MsgExecute().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgExecute {
    return new MsgExecute().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgExecute {
    return new MsgExecute().fromJsonString(jsonString, options);
  }

  static equals(a: MsgExecute | PlainMessage<MsgExecute> | undefined, b: MsgExecute | PlainMessage<MsgExecute> | undefined): boolean {
    return proto3.util.equals(MsgExecute, a, b);
  }
}

/**
 * MsgExecuteResponse is the response to MsgExecute.
 *
 * @generated from message cosmos.accounts.interfaces.account_abstraction.v1.MsgExecuteResponse
 */
export class MsgExecuteResponse extends Message<MsgExecuteResponse> {
  /**
   * execution_messages_response are the messages that the operation sender will execute.
   *
   * @generated from field: repeated google.protobuf.Any execution_messages_response = 1;
   */
  executionMessagesResponse: Any[] = [];

  constructor(data?: PartialMessage<MsgExecuteResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cosmos.accounts.interfaces.account_abstraction.v1.MsgExecuteResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "execution_messages_response", kind: "message", T: Any, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgExecuteResponse {
    return new MsgExecuteResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgExecuteResponse {
    return new MsgExecuteResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgExecuteResponse {
    return new MsgExecuteResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgExecuteResponse | PlainMessage<MsgExecuteResponse> | undefined, b: MsgExecuteResponse | PlainMessage<MsgExecuteResponse> | undefined): boolean {
    return proto3.util.equals(MsgExecuteResponse, a, b);
  }
}

/**
 * QueryAuthenticationMethods is a query that an x/account account abstraction implementer
 * must handle to return the authentication methods that the account supports.
 *
 * @generated from message cosmos.accounts.interfaces.account_abstraction.v1.QueryAuthenticationMethods
 */
export class QueryAuthenticationMethods extends Message<QueryAuthenticationMethods> {
  constructor(data?: PartialMessage<QueryAuthenticationMethods>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cosmos.accounts.interfaces.account_abstraction.v1.QueryAuthenticationMethods";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAuthenticationMethods {
    return new QueryAuthenticationMethods().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAuthenticationMethods {
    return new QueryAuthenticationMethods().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAuthenticationMethods {
    return new QueryAuthenticationMethods().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAuthenticationMethods | PlainMessage<QueryAuthenticationMethods> | undefined, b: QueryAuthenticationMethods | PlainMessage<QueryAuthenticationMethods> | undefined): boolean {
    return proto3.util.equals(QueryAuthenticationMethods, a, b);
  }
}

/**
 * QueryAuthenticationMethodsResponse is the response to QueryAuthenticationMethods.
 *
 * @generated from message cosmos.accounts.interfaces.account_abstraction.v1.QueryAuthenticationMethodsResponse
 */
export class QueryAuthenticationMethodsResponse extends Message<QueryAuthenticationMethodsResponse> {
  /**
   * authentication_methods are the authentication methods that the account supports.
   *
   * @generated from field: repeated string authentication_methods = 1;
   */
  authenticationMethods: string[] = [];

  constructor(data?: PartialMessage<QueryAuthenticationMethodsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cosmos.accounts.interfaces.account_abstraction.v1.QueryAuthenticationMethodsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authentication_methods", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAuthenticationMethodsResponse {
    return new QueryAuthenticationMethodsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAuthenticationMethodsResponse {
    return new QueryAuthenticationMethodsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAuthenticationMethodsResponse {
    return new QueryAuthenticationMethodsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAuthenticationMethodsResponse | PlainMessage<QueryAuthenticationMethodsResponse> | undefined, b: QueryAuthenticationMethodsResponse | PlainMessage<QueryAuthenticationMethodsResponse> | undefined): boolean {
    return proto3.util.equals(QueryAuthenticationMethodsResponse, a, b);
  }
}

