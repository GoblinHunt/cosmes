// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file vsc/reward/v1/tx.proto (package vsc.reward.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Params } from "./reward_pb.js";

/**
 * MsgEditRewardParams: gRPC tx message for updating the x/reward module params
 * [PERMISSIONED] Only callable by permissioned addrs.
 *
 * @generated from message vsc.reward.v1.MsgEditRewardParams
 */
export class MsgEditRewardParams extends Message<MsgEditRewardParams> {
  /**
   * @generated from field: string sender = 1;
   */
  sender = "";

  /**
   * @generated from field: string target_rewards_per_day = 2;
   */
  targetRewardsPerDay = "";

  /**
   * @generated from field: string max_rewards_per_day = 3;
   */
  maxRewardsPerDay = "";

  /**
   * @generated from field: string max_balance_depletion = 4;
   */
  maxBalanceDepletion = "";

  constructor(data?: PartialMessage<MsgEditRewardParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vsc.reward.v1.MsgEditRewardParams";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "target_rewards_per_day", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "max_rewards_per_day", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "max_balance_depletion", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgEditRewardParams {
    return new MsgEditRewardParams().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgEditRewardParams {
    return new MsgEditRewardParams().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgEditRewardParams {
    return new MsgEditRewardParams().fromJsonString(jsonString, options);
  }

  static equals(a: MsgEditRewardParams | PlainMessage<MsgEditRewardParams> | undefined, b: MsgEditRewardParams | PlainMessage<MsgEditRewardParams> | undefined): boolean {
    return proto3.util.equals(MsgEditRewardParams, a, b);
  }
}

/**
 * MsgEditRewardParamsResponse defines the Msg/EditRewardParams response
 * type.
 *
 * @generated from message vsc.reward.v1.MsgEditRewardParamsResponse
 */
export class MsgEditRewardParamsResponse extends Message<MsgEditRewardParamsResponse> {
  /**
   * @generated from field: vsc.reward.v1.Params new_params = 1;
   */
  newParams?: Params;

  constructor(data?: PartialMessage<MsgEditRewardParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vsc.reward.v1.MsgEditRewardParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "new_params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgEditRewardParamsResponse {
    return new MsgEditRewardParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgEditRewardParamsResponse {
    return new MsgEditRewardParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgEditRewardParamsResponse {
    return new MsgEditRewardParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgEditRewardParamsResponse | PlainMessage<MsgEditRewardParamsResponse> | undefined, b: MsgEditRewardParamsResponse | PlainMessage<MsgEditRewardParamsResponse> | undefined): boolean {
    return proto3.util.equals(MsgEditRewardParamsResponse, a, b);
  }
}

