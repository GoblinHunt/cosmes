// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file vsc/permissions/v1/tx.proto (package vsc.permissions.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Permissions } from "./permissions_pb.js";

/**
 * @generated from message vsc.permissions.v1.MsgUpdatePermissions
 */
export class MsgUpdatePermissions extends Message<MsgUpdatePermissions> {
  /**
   * authority is the address of the governance account.
   *
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: vsc.permissions.v1.Permissions add = 2;
   */
  add?: Permissions;

  /**
   * @generated from field: vsc.permissions.v1.Permissions remove = 3;
   */
  remove?: Permissions;

  constructor(data?: PartialMessage<MsgUpdatePermissions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vsc.permissions.v1.MsgUpdatePermissions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "add", kind: "message", T: Permissions },
    { no: 3, name: "remove", kind: "message", T: Permissions },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdatePermissions {
    return new MsgUpdatePermissions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdatePermissions {
    return new MsgUpdatePermissions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdatePermissions {
    return new MsgUpdatePermissions().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdatePermissions | PlainMessage<MsgUpdatePermissions> | undefined, b: MsgUpdatePermissions | PlainMessage<MsgUpdatePermissions> | undefined): boolean {
    return proto3.util.equals(MsgUpdatePermissions, a, b);
  }
}

/**
 * @generated from message vsc.permissions.v1.MsgUpdatePermissionsResponse
 */
export class MsgUpdatePermissionsResponse extends Message<MsgUpdatePermissionsResponse> {
  constructor(data?: PartialMessage<MsgUpdatePermissionsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vsc.permissions.v1.MsgUpdatePermissionsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdatePermissionsResponse {
    return new MsgUpdatePermissionsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdatePermissionsResponse {
    return new MsgUpdatePermissionsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdatePermissionsResponse {
    return new MsgUpdatePermissionsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdatePermissionsResponse | PlainMessage<MsgUpdatePermissionsResponse> | undefined, b: MsgUpdatePermissionsResponse | PlainMessage<MsgUpdatePermissionsResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdatePermissionsResponse, a, b);
  }
}

