// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file terra/oracle/v1beta1/tx.proto (package terra.oracle.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MsgAggregateExchangeRatePrevote, MsgAggregateExchangeRatePrevoteResponse, MsgAggregateExchangeRateVote, MsgAggregateExchangeRateVoteResponse, MsgDelegateFeedConsent, MsgDelegateFeedConsentResponse } from "./tx_pb.js";

const TYPE_NAME = "terra.oracle.v1beta1.Msg";

/**
 * AggregateExchangeRatePrevote defines a method for submitting
 * aggregate exchange rate prevote
 *
 * @generated from rpc terra.oracle.v1beta1.Msg.AggregateExchangeRatePrevote
 */
export const MsgAggregateExchangeRatePrevoteService = {
  typeName: TYPE_NAME,
  method: "AggregateExchangeRatePrevote",
  Request: MsgAggregateExchangeRatePrevote,
  Response: MsgAggregateExchangeRatePrevoteResponse,
} as const;

/**
 * AggregateExchangeRateVote defines a method for submitting
 * aggregate exchange rate vote
 *
 * @generated from rpc terra.oracle.v1beta1.Msg.AggregateExchangeRateVote
 */
export const MsgAggregateExchangeRateVoteService = {
  typeName: TYPE_NAME,
  method: "AggregateExchangeRateVote",
  Request: MsgAggregateExchangeRateVote,
  Response: MsgAggregateExchangeRateVoteResponse,
} as const;

/**
 * DelegateFeedConsent defines a method for setting the feeder delegation
 *
 * @generated from rpc terra.oracle.v1beta1.Msg.DelegateFeedConsent
 */
export const MsgDelegateFeedConsentService = {
  typeName: TYPE_NAME,
  method: "DelegateFeedConsent",
  Request: MsgDelegateFeedConsent,
  Response: MsgDelegateFeedConsentResponse,
} as const;

